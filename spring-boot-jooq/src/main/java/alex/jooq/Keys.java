/*
 * This file is generated by jOOQ.
 */
package alex.jooq;

import alex.jooq.tables.Customer;
import alex.jooq.tables.Person;
import alex.jooq.tables.QrtzBlobTriggers;
import alex.jooq.tables.QrtzCalendars;
import alex.jooq.tables.QrtzCronTriggers;
import alex.jooq.tables.QrtzFiredTriggers;
import alex.jooq.tables.QrtzJobDetails;
import alex.jooq.tables.QrtzLocks;
import alex.jooq.tables.QrtzPausedTriggerGrps;
import alex.jooq.tables.QrtzSchedulerState;
import alex.jooq.tables.QrtzSimpleTriggers;
import alex.jooq.tables.QrtzSimpropTriggers;
import alex.jooq.tables.QrtzTriggers;
import alex.jooq.tables.School;
import alex.jooq.tables.records.CustomerRecord;
import alex.jooq.tables.records.PersonRecord;
import alex.jooq.tables.records.QrtzBlobTriggersRecord;
import alex.jooq.tables.records.QrtzCalendarsRecord;
import alex.jooq.tables.records.QrtzCronTriggersRecord;
import alex.jooq.tables.records.QrtzFiredTriggersRecord;
import alex.jooq.tables.records.QrtzJobDetailsRecord;
import alex.jooq.tables.records.QrtzLocksRecord;
import alex.jooq.tables.records.QrtzPausedTriggerGrpsRecord;
import alex.jooq.tables.records.QrtzSchedulerStateRecord;
import alex.jooq.tables.records.QrtzSimpleTriggersRecord;
import alex.jooq.tables.records.QrtzSimpropTriggersRecord;
import alex.jooq.tables.records.QrtzTriggersRecord;
import alex.jooq.tables.records.SchoolRecord;
import javax.annotation.Generated;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

/**
 * A class modelling foreign key relationships and constraints of tables of the <code>test</code>
 * schema.
 */
@Generated(
        value = {"http://www.jooq.org", "jOOQ version:3.10.7"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CustomerRecord, Long> IDENTITY_CUSTOMER = Identities0.IDENTITY_CUSTOMER;
    public static final Identity<PersonRecord, Integer> IDENTITY_PERSON = Identities0.IDENTITY_PERSON;
    public static final Identity<SchoolRecord, Integer> IDENTITY_SCHOOL = Identities0.IDENTITY_SCHOOL;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_PRIMARY = UniqueKeys0.KEY_CUSTOMER_PRIMARY;
    public static final UniqueKey<PersonRecord> KEY_PERSON_PRIMARY = UniqueKeys0.KEY_PERSON_PRIMARY;
    public static final UniqueKey<QrtzBlobTriggersRecord> KEY_QRTZ_BLOB_TRIGGERS_PRIMARY =
            UniqueKeys0.KEY_QRTZ_BLOB_TRIGGERS_PRIMARY;
    public static final UniqueKey<QrtzCalendarsRecord> KEY_QRTZ_CALENDARS_PRIMARY =
            UniqueKeys0.KEY_QRTZ_CALENDARS_PRIMARY;
    public static final UniqueKey<QrtzCronTriggersRecord> KEY_QRTZ_CRON_TRIGGERS_PRIMARY =
            UniqueKeys0.KEY_QRTZ_CRON_TRIGGERS_PRIMARY;
    public static final UniqueKey<QrtzFiredTriggersRecord> KEY_QRTZ_FIRED_TRIGGERS_PRIMARY =
            UniqueKeys0.KEY_QRTZ_FIRED_TRIGGERS_PRIMARY;
    public static final UniqueKey<QrtzJobDetailsRecord> KEY_QRTZ_JOB_DETAILS_PRIMARY =
            UniqueKeys0.KEY_QRTZ_JOB_DETAILS_PRIMARY;
    public static final UniqueKey<QrtzLocksRecord> KEY_QRTZ_LOCKS_PRIMARY = UniqueKeys0.KEY_QRTZ_LOCKS_PRIMARY;
    public static final UniqueKey<QrtzPausedTriggerGrpsRecord> KEY_QRTZ_PAUSED_TRIGGER_GRPS_PRIMARY =
            UniqueKeys0.KEY_QRTZ_PAUSED_TRIGGER_GRPS_PRIMARY;
    public static final UniqueKey<QrtzSchedulerStateRecord> KEY_QRTZ_SCHEDULER_STATE_PRIMARY =
            UniqueKeys0.KEY_QRTZ_SCHEDULER_STATE_PRIMARY;
    public static final UniqueKey<QrtzSimpleTriggersRecord> KEY_QRTZ_SIMPLE_TRIGGERS_PRIMARY =
            UniqueKeys0.KEY_QRTZ_SIMPLE_TRIGGERS_PRIMARY;
    public static final UniqueKey<QrtzSimpropTriggersRecord> KEY_QRTZ_SIMPROP_TRIGGERS_PRIMARY =
            UniqueKeys0.KEY_QRTZ_SIMPROP_TRIGGERS_PRIMARY;
    public static final UniqueKey<QrtzTriggersRecord> KEY_QRTZ_TRIGGERS_PRIMARY = UniqueKeys0.KEY_QRTZ_TRIGGERS_PRIMARY;
    public static final UniqueKey<SchoolRecord> KEY_SCHOOL_PRIMARY = UniqueKeys0.KEY_SCHOOL_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<QrtzBlobTriggersRecord, QrtzTriggersRecord> QRTZ_BLOB_TRIGGERS_IBFK_1 =
            ForeignKeys0.QRTZ_BLOB_TRIGGERS_IBFK_1;
    public static final ForeignKey<QrtzCronTriggersRecord, QrtzTriggersRecord> QRTZ_CRON_TRIGGERS_IBFK_1 =
            ForeignKeys0.QRTZ_CRON_TRIGGERS_IBFK_1;
    public static final ForeignKey<QrtzSimpleTriggersRecord, QrtzTriggersRecord> QRTZ_SIMPLE_TRIGGERS_IBFK_1 =
            ForeignKeys0.QRTZ_SIMPLE_TRIGGERS_IBFK_1;
    public static final ForeignKey<QrtzSimpropTriggersRecord, QrtzTriggersRecord> QRTZ_SIMPROP_TRIGGERS_IBFK_1 =
            ForeignKeys0.QRTZ_SIMPROP_TRIGGERS_IBFK_1;
    public static final ForeignKey<QrtzTriggersRecord, QrtzJobDetailsRecord> QRTZ_TRIGGERS_IBFK_1 =
            ForeignKeys0.QRTZ_TRIGGERS_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CustomerRecord, Long> IDENTITY_CUSTOMER =
                Internal.createIdentity(Customer.CUSTOMER, Customer.CUSTOMER.ID);
        public static Identity<PersonRecord, Integer> IDENTITY_PERSON =
                Internal.createIdentity(Person.PERSON, Person.PERSON.ID);
        public static Identity<SchoolRecord, Integer> IDENTITY_SCHOOL =
                Internal.createIdentity(School.SCHOOL, School.SCHOOL.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_PRIMARY =
                Internal.createUniqueKey(Customer.CUSTOMER, "KEY_customer_PRIMARY", Customer.CUSTOMER.ID);
        public static final UniqueKey<PersonRecord> KEY_PERSON_PRIMARY =
                Internal.createUniqueKey(Person.PERSON, "KEY_person_PRIMARY", Person.PERSON.ID);
        public static final UniqueKey<QrtzBlobTriggersRecord> KEY_QRTZ_BLOB_TRIGGERS_PRIMARY = Internal.createUniqueKey(
                QrtzBlobTriggers.QRTZ_BLOB_TRIGGERS,
                "KEY_qrtz_blob_triggers_PRIMARY",
                QrtzBlobTriggers.QRTZ_BLOB_TRIGGERS.SCHED_NAME,
                QrtzBlobTriggers.QRTZ_BLOB_TRIGGERS.TRIGGER_NAME,
                QrtzBlobTriggers.QRTZ_BLOB_TRIGGERS.TRIGGER_GROUP);
        public static final UniqueKey<QrtzCalendarsRecord> KEY_QRTZ_CALENDARS_PRIMARY = Internal.createUniqueKey(
                QrtzCalendars.QRTZ_CALENDARS,
                "KEY_qrtz_calendars_PRIMARY",
                QrtzCalendars.QRTZ_CALENDARS.SCHED_NAME,
                QrtzCalendars.QRTZ_CALENDARS.CALENDAR_NAME);
        public static final UniqueKey<QrtzCronTriggersRecord> KEY_QRTZ_CRON_TRIGGERS_PRIMARY = Internal.createUniqueKey(
                QrtzCronTriggers.QRTZ_CRON_TRIGGERS,
                "KEY_qrtz_cron_triggers_PRIMARY",
                QrtzCronTriggers.QRTZ_CRON_TRIGGERS.SCHED_NAME,
                QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TRIGGER_NAME,
                QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TRIGGER_GROUP);
        public static final UniqueKey<QrtzFiredTriggersRecord> KEY_QRTZ_FIRED_TRIGGERS_PRIMARY =
                Internal.createUniqueKey(
                        QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS,
                        "KEY_qrtz_fired_triggers_PRIMARY",
                        QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.SCHED_NAME,
                        QrtzFiredTriggers.QRTZ_FIRED_TRIGGERS.ENTRY_ID);
        public static final UniqueKey<QrtzJobDetailsRecord> KEY_QRTZ_JOB_DETAILS_PRIMARY = Internal.createUniqueKey(
                QrtzJobDetails.QRTZ_JOB_DETAILS,
                "KEY_qrtz_job_details_PRIMARY",
                QrtzJobDetails.QRTZ_JOB_DETAILS.SCHED_NAME,
                QrtzJobDetails.QRTZ_JOB_DETAILS.JOB_NAME,
                QrtzJobDetails.QRTZ_JOB_DETAILS.JOB_GROUP);
        public static final UniqueKey<QrtzLocksRecord> KEY_QRTZ_LOCKS_PRIMARY = Internal.createUniqueKey(
                QrtzLocks.QRTZ_LOCKS,
                "KEY_qrtz_locks_PRIMARY",
                QrtzLocks.QRTZ_LOCKS.SCHED_NAME,
                QrtzLocks.QRTZ_LOCKS.LOCK_NAME);
        public static final UniqueKey<QrtzPausedTriggerGrpsRecord> KEY_QRTZ_PAUSED_TRIGGER_GRPS_PRIMARY =
                Internal.createUniqueKey(
                        QrtzPausedTriggerGrps.QRTZ_PAUSED_TRIGGER_GRPS,
                        "KEY_qrtz_paused_trigger_grps_PRIMARY",
                        QrtzPausedTriggerGrps.QRTZ_PAUSED_TRIGGER_GRPS.SCHED_NAME,
                        QrtzPausedTriggerGrps.QRTZ_PAUSED_TRIGGER_GRPS.TRIGGER_GROUP);
        public static final UniqueKey<QrtzSchedulerStateRecord> KEY_QRTZ_SCHEDULER_STATE_PRIMARY =
                Internal.createUniqueKey(
                        QrtzSchedulerState.QRTZ_SCHEDULER_STATE,
                        "KEY_qrtz_scheduler_state_PRIMARY",
                        QrtzSchedulerState.QRTZ_SCHEDULER_STATE.SCHED_NAME,
                        QrtzSchedulerState.QRTZ_SCHEDULER_STATE.INSTANCE_NAME);
        public static final UniqueKey<QrtzSimpleTriggersRecord> KEY_QRTZ_SIMPLE_TRIGGERS_PRIMARY =
                Internal.createUniqueKey(
                        QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS,
                        "KEY_qrtz_simple_triggers_PRIMARY",
                        QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS.SCHED_NAME,
                        QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS.TRIGGER_NAME,
                        QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS.TRIGGER_GROUP);
        public static final UniqueKey<QrtzSimpropTriggersRecord> KEY_QRTZ_SIMPROP_TRIGGERS_PRIMARY =
                Internal.createUniqueKey(
                        QrtzSimpropTriggers.QRTZ_SIMPROP_TRIGGERS,
                        "KEY_qrtz_simprop_triggers_PRIMARY",
                        QrtzSimpropTriggers.QRTZ_SIMPROP_TRIGGERS.SCHED_NAME,
                        QrtzSimpropTriggers.QRTZ_SIMPROP_TRIGGERS.TRIGGER_NAME,
                        QrtzSimpropTriggers.QRTZ_SIMPROP_TRIGGERS.TRIGGER_GROUP);
        public static final UniqueKey<QrtzTriggersRecord> KEY_QRTZ_TRIGGERS_PRIMARY = Internal.createUniqueKey(
                QrtzTriggers.QRTZ_TRIGGERS,
                "KEY_qrtz_triggers_PRIMARY",
                QrtzTriggers.QRTZ_TRIGGERS.SCHED_NAME,
                QrtzTriggers.QRTZ_TRIGGERS.TRIGGER_NAME,
                QrtzTriggers.QRTZ_TRIGGERS.TRIGGER_GROUP);
        public static final UniqueKey<SchoolRecord> KEY_SCHOOL_PRIMARY =
                Internal.createUniqueKey(School.SCHOOL, "KEY_school_PRIMARY", School.SCHOOL.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<QrtzBlobTriggersRecord, QrtzTriggersRecord> QRTZ_BLOB_TRIGGERS_IBFK_1 =
                Internal.createForeignKey(
                        Keys.KEY_QRTZ_TRIGGERS_PRIMARY,
                        QrtzBlobTriggers.QRTZ_BLOB_TRIGGERS,
                        "qrtz_blob_triggers_ibfk_1",
                        QrtzBlobTriggers.QRTZ_BLOB_TRIGGERS.SCHED_NAME,
                        QrtzBlobTriggers.QRTZ_BLOB_TRIGGERS.TRIGGER_NAME,
                        QrtzBlobTriggers.QRTZ_BLOB_TRIGGERS.TRIGGER_GROUP);
        public static final ForeignKey<QrtzCronTriggersRecord, QrtzTriggersRecord> QRTZ_CRON_TRIGGERS_IBFK_1 =
                Internal.createForeignKey(
                        Keys.KEY_QRTZ_TRIGGERS_PRIMARY,
                        QrtzCronTriggers.QRTZ_CRON_TRIGGERS,
                        "qrtz_cron_triggers_ibfk_1",
                        QrtzCronTriggers.QRTZ_CRON_TRIGGERS.SCHED_NAME,
                        QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TRIGGER_NAME,
                        QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TRIGGER_GROUP);
        public static final ForeignKey<QrtzSimpleTriggersRecord, QrtzTriggersRecord> QRTZ_SIMPLE_TRIGGERS_IBFK_1 =
                Internal.createForeignKey(
                        Keys.KEY_QRTZ_TRIGGERS_PRIMARY,
                        QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS,
                        "qrtz_simple_triggers_ibfk_1",
                        QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS.SCHED_NAME,
                        QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS.TRIGGER_NAME,
                        QrtzSimpleTriggers.QRTZ_SIMPLE_TRIGGERS.TRIGGER_GROUP);
        public static final ForeignKey<QrtzSimpropTriggersRecord, QrtzTriggersRecord> QRTZ_SIMPROP_TRIGGERS_IBFK_1 =
                Internal.createForeignKey(
                        Keys.KEY_QRTZ_TRIGGERS_PRIMARY,
                        QrtzSimpropTriggers.QRTZ_SIMPROP_TRIGGERS,
                        "qrtz_simprop_triggers_ibfk_1",
                        QrtzSimpropTriggers.QRTZ_SIMPROP_TRIGGERS.SCHED_NAME,
                        QrtzSimpropTriggers.QRTZ_SIMPROP_TRIGGERS.TRIGGER_NAME,
                        QrtzSimpropTriggers.QRTZ_SIMPROP_TRIGGERS.TRIGGER_GROUP);
        public static final ForeignKey<QrtzTriggersRecord, QrtzJobDetailsRecord> QRTZ_TRIGGERS_IBFK_1 =
                Internal.createForeignKey(
                        Keys.KEY_QRTZ_JOB_DETAILS_PRIMARY,
                        QrtzTriggers.QRTZ_TRIGGERS,
                        "qrtz_triggers_ibfk_1",
                        QrtzTriggers.QRTZ_TRIGGERS.SCHED_NAME,
                        QrtzTriggers.QRTZ_TRIGGERS.JOB_NAME,
                        QrtzTriggers.QRTZ_TRIGGERS.JOB_GROUP);
    }
}
