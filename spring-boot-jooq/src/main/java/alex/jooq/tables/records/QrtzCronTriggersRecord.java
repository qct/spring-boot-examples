/*
 * This file is generated by jOOQ.
 */
package alex.jooq.tables.records;

import alex.jooq.tables.QrtzCronTriggers;
import javax.annotation.Generated;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

/** This class is generated by jOOQ. */
@Generated(
        value = {"http://www.jooq.org", "jOOQ version:3.10.7"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class QrtzCronTriggersRecord extends UpdatableRecordImpl<QrtzCronTriggersRecord>
        implements Record5<String, String, String, String, String> {

    private static final long serialVersionUID = 1279541320;

    /** Setter for <code>test.qrtz_cron_triggers.SCHED_NAME</code>. */
    public void setSchedName(String value) {
        set(0, value);
    }

    /** Getter for <code>test.qrtz_cron_triggers.SCHED_NAME</code>. */
    public String getSchedName() {
        return (String) get(0);
    }

    /** Setter for <code>test.qrtz_cron_triggers.TRIGGER_NAME</code>. */
    public void setTriggerName(String value) {
        set(1, value);
    }

    /** Getter for <code>test.qrtz_cron_triggers.TRIGGER_NAME</code>. */
    public String getTriggerName() {
        return (String) get(1);
    }

    /** Setter for <code>test.qrtz_cron_triggers.TRIGGER_GROUP</code>. */
    public void setTriggerGroup(String value) {
        set(2, value);
    }

    /** Getter for <code>test.qrtz_cron_triggers.TRIGGER_GROUP</code>. */
    public String getTriggerGroup() {
        return (String) get(2);
    }

    /** Setter for <code>test.qrtz_cron_triggers.CRON_EXPRESSION</code>. */
    public void setCronExpression(String value) {
        set(3, value);
    }

    /** Getter for <code>test.qrtz_cron_triggers.CRON_EXPRESSION</code>. */
    public String getCronExpression() {
        return (String) get(3);
    }

    /** Setter for <code>test.qrtz_cron_triggers.TIME_ZONE_ID</code>. */
    public void setTimeZoneId(String value) {
        set(4, value);
    }

    /** Getter for <code>test.qrtz_cron_triggers.TIME_ZONE_ID</code>. */
    public String getTimeZoneId() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /** {@inheritDoc} */
    @Override
    public Record3<String, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /** {@inheritDoc} */
    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /** {@inheritDoc} */
    @Override
    public Row5<String, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /** {@inheritDoc} */
    @Override
    public Field<String> field1() {
        return QrtzCronTriggers.QRTZ_CRON_TRIGGERS.SCHED_NAME;
    }

    /** {@inheritDoc} */
    @Override
    public Field<String> field2() {
        return QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TRIGGER_NAME;
    }

    /** {@inheritDoc} */
    @Override
    public Field<String> field3() {
        return QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TRIGGER_GROUP;
    }

    /** {@inheritDoc} */
    @Override
    public Field<String> field4() {
        return QrtzCronTriggers.QRTZ_CRON_TRIGGERS.CRON_EXPRESSION;
    }

    /** {@inheritDoc} */
    @Override
    public Field<String> field5() {
        return QrtzCronTriggers.QRTZ_CRON_TRIGGERS.TIME_ZONE_ID;
    }

    /** {@inheritDoc} */
    @Override
    public String component1() {
        return getSchedName();
    }

    /** {@inheritDoc} */
    @Override
    public String component2() {
        return getTriggerName();
    }

    /** {@inheritDoc} */
    @Override
    public String component3() {
        return getTriggerGroup();
    }

    /** {@inheritDoc} */
    @Override
    public String component4() {
        return getCronExpression();
    }

    /** {@inheritDoc} */
    @Override
    public String component5() {
        return getTimeZoneId();
    }

    /** {@inheritDoc} */
    @Override
    public String value1() {
        return getSchedName();
    }

    /** {@inheritDoc} */
    @Override
    public String value2() {
        return getTriggerName();
    }

    /** {@inheritDoc} */
    @Override
    public String value3() {
        return getTriggerGroup();
    }

    /** {@inheritDoc} */
    @Override
    public String value4() {
        return getCronExpression();
    }

    /** {@inheritDoc} */
    @Override
    public String value5() {
        return getTimeZoneId();
    }

    /** {@inheritDoc} */
    @Override
    public QrtzCronTriggersRecord value1(String value) {
        setSchedName(value);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public QrtzCronTriggersRecord value2(String value) {
        setTriggerName(value);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public QrtzCronTriggersRecord value3(String value) {
        setTriggerGroup(value);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public QrtzCronTriggersRecord value4(String value) {
        setCronExpression(value);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public QrtzCronTriggersRecord value5(String value) {
        setTimeZoneId(value);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public QrtzCronTriggersRecord values(String value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /** Create a detached QrtzCronTriggersRecord */
    public QrtzCronTriggersRecord() {
        super(QrtzCronTriggers.QRTZ_CRON_TRIGGERS);
    }

    /** Create a detached, initialised QrtzCronTriggersRecord */
    public QrtzCronTriggersRecord(
            String schedName, String triggerName, String triggerGroup, String cronExpression, String timeZoneId) {
        super(QrtzCronTriggers.QRTZ_CRON_TRIGGERS);

        set(0, schedName);
        set(1, triggerName);
        set(2, triggerGroup);
        set(3, cronExpression);
        set(4, timeZoneId);
    }
}
