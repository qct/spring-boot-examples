/*
 * This file is generated by jOOQ.
 */
package alex.jooq.tables;

import alex.jooq.Indexes;
import alex.jooq.Keys;
import alex.jooq.Test;
import alex.jooq.tables.records.QrtzTriggersRecord;
import java.util.Arrays;
import java.util.List;
import javax.annotation.Generated;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

/** This class is generated by jOOQ. */
@Generated(
        value = {"http://www.jooq.org", "jOOQ version:3.10.7"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class QrtzTriggers extends TableImpl<QrtzTriggersRecord> {

    private static final long serialVersionUID = -942959191;

    /** The reference instance of <code>test.qrtz_triggers</code> */
    public static final QrtzTriggers QRTZ_TRIGGERS = new QrtzTriggers();

    /** The class holding records for this type */
    @Override
    public Class<QrtzTriggersRecord> getRecordType() {
        return QrtzTriggersRecord.class;
    }

    /** The column <code>test.qrtz_triggers.SCHED_NAME</code>. */
    public final TableField<QrtzTriggersRecord, String> SCHED_NAME =
            createField("SCHED_NAME", org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false), this, "");

    /** The column <code>test.qrtz_triggers.TRIGGER_NAME</code>. */
    public final TableField<QrtzTriggersRecord, String> TRIGGER_NAME =
            createField("TRIGGER_NAME", org.jooq.impl.SQLDataType.VARCHAR(190).nullable(false), this, "");

    /** The column <code>test.qrtz_triggers.TRIGGER_GROUP</code>. */
    public final TableField<QrtzTriggersRecord, String> TRIGGER_GROUP =
            createField("TRIGGER_GROUP", org.jooq.impl.SQLDataType.VARCHAR(190).nullable(false), this, "");

    /** The column <code>test.qrtz_triggers.JOB_NAME</code>. */
    public final TableField<QrtzTriggersRecord, String> JOB_NAME =
            createField("JOB_NAME", org.jooq.impl.SQLDataType.VARCHAR(190).nullable(false), this, "");

    /** The column <code>test.qrtz_triggers.JOB_GROUP</code>. */
    public final TableField<QrtzTriggersRecord, String> JOB_GROUP =
            createField("JOB_GROUP", org.jooq.impl.SQLDataType.VARCHAR(190).nullable(false), this, "");

    /** The column <code>test.qrtz_triggers.DESCRIPTION</code>. */
    public final TableField<QrtzTriggersRecord, String> DESCRIPTION =
            createField("DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR(250), this, "");

    /** The column <code>test.qrtz_triggers.NEXT_FIRE_TIME</code>. */
    public final TableField<QrtzTriggersRecord, Long> NEXT_FIRE_TIME =
            createField("NEXT_FIRE_TIME", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /** The column <code>test.qrtz_triggers.PREV_FIRE_TIME</code>. */
    public final TableField<QrtzTriggersRecord, Long> PREV_FIRE_TIME =
            createField("PREV_FIRE_TIME", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /** The column <code>test.qrtz_triggers.PRIORITY</code>. */
    public final TableField<QrtzTriggersRecord, Integer> PRIORITY =
            createField("PRIORITY", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /** The column <code>test.qrtz_triggers.TRIGGER_STATE</code>. */
    public final TableField<QrtzTriggersRecord, String> TRIGGER_STATE =
            createField("TRIGGER_STATE", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /** The column <code>test.qrtz_triggers.TRIGGER_TYPE</code>. */
    public final TableField<QrtzTriggersRecord, String> TRIGGER_TYPE =
            createField("TRIGGER_TYPE", org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false), this, "");

    /** The column <code>test.qrtz_triggers.START_TIME</code>. */
    public final TableField<QrtzTriggersRecord, Long> START_TIME =
            createField("START_TIME", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /** The column <code>test.qrtz_triggers.END_TIME</code>. */
    public final TableField<QrtzTriggersRecord, Long> END_TIME =
            createField("END_TIME", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /** The column <code>test.qrtz_triggers.CALENDAR_NAME</code>. */
    public final TableField<QrtzTriggersRecord, String> CALENDAR_NAME =
            createField("CALENDAR_NAME", org.jooq.impl.SQLDataType.VARCHAR(190), this, "");

    /** The column <code>test.qrtz_triggers.MISFIRE_INSTR</code>. */
    public final TableField<QrtzTriggersRecord, Short> MISFIRE_INSTR =
            createField("MISFIRE_INSTR", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /** The column <code>test.qrtz_triggers.JOB_DATA</code>. */
    public final TableField<QrtzTriggersRecord, byte[]> JOB_DATA =
            createField("JOB_DATA", org.jooq.impl.SQLDataType.BLOB, this, "");

    /** Create a <code>test.qrtz_triggers</code> table reference */
    public QrtzTriggers() {
        this(DSL.name("qrtz_triggers"), null);
    }

    /** Create an aliased <code>test.qrtz_triggers</code> table reference */
    public QrtzTriggers(String alias) {
        this(DSL.name(alias), QRTZ_TRIGGERS);
    }

    /** Create an aliased <code>test.qrtz_triggers</code> table reference */
    public QrtzTriggers(Name alias) {
        this(alias, QRTZ_TRIGGERS);
    }

    private QrtzTriggers(Name alias, Table<QrtzTriggersRecord> aliased) {
        this(alias, aliased, null);
    }

    private QrtzTriggers(Name alias, Table<QrtzTriggersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /** {@inheritDoc} */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /** {@inheritDoc} */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(
                Indexes.QRTZ_TRIGGERS_IDX_QRTZ_T_C,
                Indexes.QRTZ_TRIGGERS_IDX_QRTZ_T_G,
                Indexes.QRTZ_TRIGGERS_IDX_QRTZ_T_J,
                Indexes.QRTZ_TRIGGERS_IDX_QRTZ_T_JG,
                Indexes.QRTZ_TRIGGERS_IDX_QRTZ_T_NEXT_FIRE_TIME,
                Indexes.QRTZ_TRIGGERS_IDX_QRTZ_T_NFT_MISFIRE,
                Indexes.QRTZ_TRIGGERS_IDX_QRTZ_T_NFT_ST,
                Indexes.QRTZ_TRIGGERS_IDX_QRTZ_T_NFT_ST_MISFIRE,
                Indexes.QRTZ_TRIGGERS_IDX_QRTZ_T_NFT_ST_MISFIRE_GRP,
                Indexes.QRTZ_TRIGGERS_IDX_QRTZ_T_N_G_STATE,
                Indexes.QRTZ_TRIGGERS_IDX_QRTZ_T_N_STATE,
                Indexes.QRTZ_TRIGGERS_IDX_QRTZ_T_STATE,
                Indexes.QRTZ_TRIGGERS_PRIMARY);
    }

    /** {@inheritDoc} */
    @Override
    public UniqueKey<QrtzTriggersRecord> getPrimaryKey() {
        return Keys.KEY_QRTZ_TRIGGERS_PRIMARY;
    }

    /** {@inheritDoc} */
    @Override
    public List<UniqueKey<QrtzTriggersRecord>> getKeys() {
        return Arrays.<UniqueKey<QrtzTriggersRecord>>asList(Keys.KEY_QRTZ_TRIGGERS_PRIMARY);
    }

    /** {@inheritDoc} */
    @Override
    public List<ForeignKey<QrtzTriggersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QrtzTriggersRecord, ?>>asList(Keys.QRTZ_TRIGGERS_IBFK_1);
    }

    /** {@inheritDoc} */
    @Override
    public QrtzTriggers as(String alias) {
        return new QrtzTriggers(DSL.name(alias), this);
    }

    /** {@inheritDoc} */
    @Override
    public QrtzTriggers as(Name alias) {
        return new QrtzTriggers(alias, this);
    }

    /** Rename this table */
    @Override
    public QrtzTriggers rename(String name) {
        return new QrtzTriggers(DSL.name(name), null);
    }

    /** Rename this table */
    @Override
    public QrtzTriggers rename(Name name) {
        return new QrtzTriggers(name, null);
    }
}
