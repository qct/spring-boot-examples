/*
 * This file is generated by jOOQ.
 */
package alex.jooq.tables;

import alex.jooq.Indexes;
import alex.jooq.Keys;
import alex.jooq.Test;
import alex.jooq.tables.records.QrtzJobDetailsRecord;
import java.util.Arrays;
import java.util.List;
import javax.annotation.Generated;
import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

/** This class is generated by jOOQ. */
@Generated(
        value = {"http://www.jooq.org", "jOOQ version:3.10.7"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class QrtzJobDetails extends TableImpl<QrtzJobDetailsRecord> {

    private static final long serialVersionUID = 2080560154;

    /** The reference instance of <code>test.qrtz_job_details</code> */
    public static final QrtzJobDetails QRTZ_JOB_DETAILS = new QrtzJobDetails();

    /** The class holding records for this type */
    @Override
    public Class<QrtzJobDetailsRecord> getRecordType() {
        return QrtzJobDetailsRecord.class;
    }

    /** The column <code>test.qrtz_job_details.SCHED_NAME</code>. */
    public final TableField<QrtzJobDetailsRecord, String> SCHED_NAME =
            createField("SCHED_NAME", org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false), this, "");

    /** The column <code>test.qrtz_job_details.JOB_NAME</code>. */
    public final TableField<QrtzJobDetailsRecord, String> JOB_NAME =
            createField("JOB_NAME", org.jooq.impl.SQLDataType.VARCHAR(190).nullable(false), this, "");

    /** The column <code>test.qrtz_job_details.JOB_GROUP</code>. */
    public final TableField<QrtzJobDetailsRecord, String> JOB_GROUP =
            createField("JOB_GROUP", org.jooq.impl.SQLDataType.VARCHAR(190).nullable(false), this, "");

    /** The column <code>test.qrtz_job_details.DESCRIPTION</code>. */
    public final TableField<QrtzJobDetailsRecord, String> DESCRIPTION =
            createField("DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR(250), this, "");

    /** The column <code>test.qrtz_job_details.JOB_CLASS_NAME</code>. */
    public final TableField<QrtzJobDetailsRecord, String> JOB_CLASS_NAME =
            createField(
                    "JOB_CLASS_NAME", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "");

    /** The column <code>test.qrtz_job_details.IS_DURABLE</code>. */
    public final TableField<QrtzJobDetailsRecord, String> IS_DURABLE =
            createField("IS_DURABLE", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /** The column <code>test.qrtz_job_details.IS_NONCONCURRENT</code>. */
    public final TableField<QrtzJobDetailsRecord, String> IS_NONCONCURRENT =
            createField(
                    "IS_NONCONCURRENT", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /** The column <code>test.qrtz_job_details.IS_UPDATE_DATA</code>. */
    public final TableField<QrtzJobDetailsRecord, String> IS_UPDATE_DATA =
            createField("IS_UPDATE_DATA", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /** The column <code>test.qrtz_job_details.REQUESTS_RECOVERY</code>. */
    public final TableField<QrtzJobDetailsRecord, String> REQUESTS_RECOVERY =
            createField(
                    "REQUESTS_RECOVERY", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /** The column <code>test.qrtz_job_details.JOB_DATA</code>. */
    public final TableField<QrtzJobDetailsRecord, byte[]> JOB_DATA =
            createField("JOB_DATA", org.jooq.impl.SQLDataType.BLOB, this, "");

    /** Create a <code>test.qrtz_job_details</code> table reference */
    public QrtzJobDetails() {
        this(DSL.name("qrtz_job_details"), null);
    }

    /** Create an aliased <code>test.qrtz_job_details</code> table reference */
    public QrtzJobDetails(String alias) {
        this(DSL.name(alias), QRTZ_JOB_DETAILS);
    }

    /** Create an aliased <code>test.qrtz_job_details</code> table reference */
    public QrtzJobDetails(Name alias) {
        this(alias, QRTZ_JOB_DETAILS);
    }

    private QrtzJobDetails(Name alias, Table<QrtzJobDetailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private QrtzJobDetails(Name alias, Table<QrtzJobDetailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /** {@inheritDoc} */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /** {@inheritDoc} */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(
                Indexes.QRTZ_JOB_DETAILS_IDX_QRTZ_J_GRP,
                Indexes.QRTZ_JOB_DETAILS_IDX_QRTZ_J_REQ_RECOVERY,
                Indexes.QRTZ_JOB_DETAILS_PRIMARY);
    }

    /** {@inheritDoc} */
    @Override
    public UniqueKey<QrtzJobDetailsRecord> getPrimaryKey() {
        return Keys.KEY_QRTZ_JOB_DETAILS_PRIMARY;
    }

    /** {@inheritDoc} */
    @Override
    public List<UniqueKey<QrtzJobDetailsRecord>> getKeys() {
        return Arrays.<UniqueKey<QrtzJobDetailsRecord>>asList(Keys.KEY_QRTZ_JOB_DETAILS_PRIMARY);
    }

    /** {@inheritDoc} */
    @Override
    public QrtzJobDetails as(String alias) {
        return new QrtzJobDetails(DSL.name(alias), this);
    }

    /** {@inheritDoc} */
    @Override
    public QrtzJobDetails as(Name alias) {
        return new QrtzJobDetails(alias, this);
    }

    /** Rename this table */
    @Override
    public QrtzJobDetails rename(String name) {
        return new QrtzJobDetails(DSL.name(name), null);
    }

    /** Rename this table */
    @Override
    public QrtzJobDetails rename(Name name) {
        return new QrtzJobDetails(name, null);
    }
}
