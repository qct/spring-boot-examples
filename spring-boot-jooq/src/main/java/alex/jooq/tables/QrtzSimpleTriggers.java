/*
 * This file is generated by jOOQ.
 */
package alex.jooq.tables;

import alex.jooq.Indexes;
import alex.jooq.Keys;
import alex.jooq.Test;
import alex.jooq.tables.records.QrtzSimpleTriggersRecord;
import jakarta.annotation.Generated;
import java.util.Arrays;
import java.util.List;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

/** This class is generated by jOOQ. */
@Generated(
        value = {"http://www.jooq.org", "jOOQ version:3.10.7"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class QrtzSimpleTriggers extends TableImpl<QrtzSimpleTriggersRecord> {

    private static final long serialVersionUID = -707629083;

    /** The reference instance of <code>test.qrtz_simple_triggers</code> */
    public static final QrtzSimpleTriggers QRTZ_SIMPLE_TRIGGERS = new QrtzSimpleTriggers();

    /** The class holding records for this type */
    @Override
    public Class<QrtzSimpleTriggersRecord> getRecordType() {
        return QrtzSimpleTriggersRecord.class;
    }

    /** The column <code>test.qrtz_simple_triggers.SCHED_NAME</code>. */
    public final TableField<QrtzSimpleTriggersRecord, String> SCHED_NAME =
            createField("SCHED_NAME", org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false), this, "");

    /** The column <code>test.qrtz_simple_triggers.TRIGGER_NAME</code>. */
    public final TableField<QrtzSimpleTriggersRecord, String> TRIGGER_NAME =
            createField("TRIGGER_NAME", org.jooq.impl.SQLDataType.VARCHAR(190).nullable(false), this, "");

    /** The column <code>test.qrtz_simple_triggers.TRIGGER_GROUP</code>. */
    public final TableField<QrtzSimpleTriggersRecord, String> TRIGGER_GROUP =
            createField("TRIGGER_GROUP", org.jooq.impl.SQLDataType.VARCHAR(190).nullable(false), this, "");

    /** The column <code>test.qrtz_simple_triggers.REPEAT_COUNT</code>. */
    public final TableField<QrtzSimpleTriggersRecord, Long> REPEAT_COUNT =
            createField("REPEAT_COUNT", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /** The column <code>test.qrtz_simple_triggers.REPEAT_INTERVAL</code>. */
    public final TableField<QrtzSimpleTriggersRecord, Long> REPEAT_INTERVAL =
            createField("REPEAT_INTERVAL", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /** The column <code>test.qrtz_simple_triggers.TIMES_TRIGGERED</code>. */
    public final TableField<QrtzSimpleTriggersRecord, Long> TIMES_TRIGGERED =
            createField("TIMES_TRIGGERED", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /** Create a <code>test.qrtz_simple_triggers</code> table reference */
    public QrtzSimpleTriggers() {
        this(DSL.name("qrtz_simple_triggers"), null);
    }

    /** Create an aliased <code>test.qrtz_simple_triggers</code> table reference */
    public QrtzSimpleTriggers(String alias) {
        this(DSL.name(alias), QRTZ_SIMPLE_TRIGGERS);
    }

    /** Create an aliased <code>test.qrtz_simple_triggers</code> table reference */
    public QrtzSimpleTriggers(Name alias) {
        this(alias, QRTZ_SIMPLE_TRIGGERS);
    }

    private QrtzSimpleTriggers(Name alias, Table<QrtzSimpleTriggersRecord> aliased) {
        this(alias, aliased, null);
    }

    private QrtzSimpleTriggers(Name alias, Table<QrtzSimpleTriggersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /** {@inheritDoc} */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /** {@inheritDoc} */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QRTZ_SIMPLE_TRIGGERS_PRIMARY);
    }

    /** {@inheritDoc} */
    @Override
    public UniqueKey<QrtzSimpleTriggersRecord> getPrimaryKey() {
        return Keys.KEY_QRTZ_SIMPLE_TRIGGERS_PRIMARY;
    }

    /** {@inheritDoc} */
    @Override
    public List<UniqueKey<QrtzSimpleTriggersRecord>> getKeys() {
        return Arrays.<UniqueKey<QrtzSimpleTriggersRecord>>asList(Keys.KEY_QRTZ_SIMPLE_TRIGGERS_PRIMARY);
    }

    /** {@inheritDoc} */
    @Override
    public List<ForeignKey<QrtzSimpleTriggersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QrtzSimpleTriggersRecord, ?>>asList(Keys.QRTZ_SIMPLE_TRIGGERS_IBFK_1);
    }

    /** {@inheritDoc} */
    @Override
    public QrtzSimpleTriggers as(String alias) {
        return new QrtzSimpleTriggers(DSL.name(alias), this);
    }

    /** {@inheritDoc} */
    @Override
    public QrtzSimpleTriggers as(Name alias) {
        return new QrtzSimpleTriggers(alias, this);
    }

    /** Rename this table */
    @Override
    public QrtzSimpleTriggers rename(String name) {
        return new QrtzSimpleTriggers(DSL.name(name), null);
    }

    /** Rename this table */
    @Override
    public QrtzSimpleTriggers rename(Name name) {
        return new QrtzSimpleTriggers(name, null);
    }
}
